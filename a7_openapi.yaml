openapi: 3.0.0

info:
  version: '1.0'
  title: 'LBAW Rabbit Web API'
  description: 'Web Resources Specification (A7)'

servers:
- url: http://lbaw22124.lbaw.fe.up.pt
  description: Production server

tags:
  - name: 'M01: Authentication and Individual Profile'
  - name: 'M02: Communities'
  - name: 'M03: Posts'
  - name: 'M04: User Administration and Static pages'

paths:

# M01 - User Authentication and Individual Profiles

  /signin:

    get:
      operationId: R101  
      summary: 'R101 Login Form'
      description: 'Provide Sign In form. Access: PUB'
      tags:
        - 'M01: Authentication and Individual Profile'
      responses:
        '200':
          description: 'Ok. Show Sign In UI'

    post: 
      operationId: R102
      summary: 'R102: Login Action'
      description: 'Processes the Sign In form submission. Access: PUB'
      tags:
        - 'M01: Authentication and Individual Profile'
      
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                required:
                  - username
                  - password

      responses:
        '302':
          description: 'Redirect after processing the Sign In credentials.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful authentication. Redirect to homepage.'
                  value: '/feed'
                302Error:
                  description: 'Failed authentication. Redirect to Sign In form.'
                  value: '/signin' 

  /signout:
    
    post: 
      operationId: R103
      summary: 'R103: Sign Out Action'
      description: 'Sign Out the current authenticated user. Access: USR, ADM'
      tags: 
        - 'M01: Authentication and Individual Profile'

      responses:
        '302':
          description: 'Redirect after processing Sign Out.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Sucessful Sign Out. Redirect to homepage.'
                  value: '/feed'

  /signup:
    
    get:
      operationId: R104
      summary: 'R104: Register Form'
      description: 'Provide new user registration form. Access: PUB'
      tags: 
        - 'M01: Authentication and Individual Profile'

      responses:
        '200':
          description: 'Ok. Show Sign Up UI'
      
    post: 
      operationId: R105
      summary: 'R105: Sign Up Action'
      description: 'Process the new user registration form submission. Acess: PUB'
      tags:
        - 'M01: Authentication and Individual Profile'
      
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - username
                - email
                - password
      
      responses:
        '302': 
          description: 'Redirect after processing the new user information.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful authentication. Redirect to Sign In form.'
                  value: '/signin'
                302Failure:
                  description: 'Failed authentication. Redirect to Sign Up form.'
                  value: '/signup'

  /users/{id}:

    get:
      operationId: R106
      summary: 'R106: View user profile'
      description: 'Provide individual user profile UI. Access: PUB'
      tags:
        - 'M01: Authentication and Individual Profile'
      
      parameters:
        - in: path 
          name: id
          schema:
            type: integer
          required: true 
      
      responses:
        '200':
          description: 'Ok. Show view profile UI'
        '404':
          description: 'Error. User not found'
    
  /users/{id}/edit:

    get:
      operationId: R106
      summary: 'R106: Edit user profile'
      description: 'Provide Edit Profile Form. Access: USR'
      tags:
        - 'M01: Authentication and Individual Profile'
      
      parameters:
        - in: path 
          name: id 
          schema:
            type: integer
          required: true 
      
      responses:
        '200':
          description: 'Ok. Show edit profile UI'  
        '404':
          description: 'Error. User not found'  

    put:
      operationId: R107
      summary: 'R107: Edit user profile'
      description: 'Process the user profile editing form submission. Access: USR'
      tags:
        - 'M01: Authentication and Individual Profile'

      parameters:
        - in: path 
          name: id 
          schema:
            type: integer
          required: true 

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                bio:
                  type: string
                password:
                  type: string
                show_communities:
                  type: boolean
              
      responses:
        '201':
          description: 'Ok. Profile edited successfully.'
        '404':
          description: 'Error. User not found'


# M02 - Communities

  /api/communities:

    get:
      operationId: R201
      summary: 'R201: Community Search'
      description: 'Search for communities. Access: PUB'
      tags:
        - 'M02: Communities'

      parameters:
        - in: query
          name: query
          description: 'String to use for full-text search'
          schema:
            type: string
          required: false
        - in: query
          name: tag
          description: 'Only communities with at least one of the given tags will be considered for the search'
          schema:
            type: array
            items:
              type: string
          required: false
        - in: query
          name: owner
          description: 'Only communities that are owned by the user will be shown' 
          schema:
            type: integer
          required: false 
      
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    owner:
                      type: string
                    name:
                      type: string
                    description:
                      type: string
                    founded_date:
                      type: string
                    tag:
                      type: string
                example:
                  - id: 2
                    owner: 4
                    name: lbawmemes
                    description: The best memes of the LBAW course are all found here.
                    founded_date: 2019-12-22
                    tag: memes
                  - id: 3
                    owner: 6
                    name: laravel
                    description: The best community to stay informed about new laravel updates and news.
                    founded_date: 2019-12-22
                    tag: tech

  /community/{id}:
  
    get:
      operationId: R202
      summary: 'R202: View community page'
      description: 'Show the individual community page. Access: PUB'
      tags:
        - 'M02: Communities'
      
      parameters:
        - in: path 
          name: id 
          schema:
            type: integer
          required: true 
      
      responses:
        '200':
          description: 'Ok. Show view community UI'
        '404':
          description: 'Error. Community not found'


# M03 - Posts 

  /community/{id}/submit:
    get:
      operationId: R301
      summary: 'R301: Create post form'
      description: 'Provides the create a post form. Access: USR'
      tags:
        - 'M03: Posts'

      parameters:
        - in: path 
          name: id
          schema:
            type: integer
          required: true

      responses:
        '200':
          description: 'Ok. Show create post UI.'
        '404':
          description: 'Error. Community not found'

    post:
      operationId: R302
      summary: 'R302: Create post action'
      description: 'Processes the create a post form sub. Access: USR'
      tags:
        - 'M03: Posts'

      parameters:
        - in: path 
          name: id
          schema:
            type: integer
          required: true

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                title: 
                  type: string
                text:
                  type: string
                image:
                  type: string
                  format: byte
                required:
                  - title

      responses: 
        '302': 
          description: 'Redirect after processing the created post.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful submit of the post. Redirect to the post page.'
                  value: '/post/{pid}/'
                302Failure:
                  description: 'Failed post creation. Redirect to the create post page.'
                  value: '/community/{cid}/submit/'

  post/{id}:
    get:
      operationId: R303
      summary: 'R303: View post'
      description: 'Shows an individual post. Access: PUB'
      tags:
        - 'M03: Posts'

      parameters:
        - in: path 
          name: id
          schema:
            type: integer
          required: true

      responses:
        '200':
          description: 'Ok. Show post UI.'
        '404':
          description: 'Error. Post not found'

    delete:
      operationId: R304
      summary: 'R304: Delete post action'
      description: 'Deletes a post. Access: POWN, MOD, ADM'
      tags:
        - 'M03: Posts'

      parameters:
        - in: path 
          name: id
          schema:
            type: integer
          required: true

      responses:
        '200':
          description: 'Ok. Post deleted.'
        '403':
          description: 'Error. Insufficient permissions' # TODO: Error code quando um post owner tenta apagar um post com replies / likes / etc.
        '404':
          description: 'Error. Post not found'

  /post/{id}/edit:
    get:
      operationId: R305
      summmary: 'R305: Edit Post Form'
      description: 'Provide edit post form. Access: POWN'
      tags:
      - 'M03: Posts'

      parameters:
        - in: path 
          name: id
          schema:
            type: integer
          required: true

      responses:
        '200':
          description: 'Ok. Show edit post UI.'
        '403':
          description: 'Error. Insufficient permissions'
        '404':
          description: 'Error. Post not found'


    put:
      operationId: R306
      summary: 'R306: Edit Post Action'
      description: 'Processes the edit post form submission. Access: POWN'
      tags:
        - 'M03: Posts'

      parameters:
        - in: path 
          name: cid
          schema:
            type: integer
          required: true
        - in: path 
          name: pid
          schema:
            type: integer
          required: true

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                new_title: 
                  type: string
                new_text:
                  type: string
                new_image:
                  type: string
                  format: byte
                required:
                  - new_title

      responses: 
        '302': 
          description: 'Redirect after processing the edited post.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful edit of the post. Redirect to the post page.'
                  value: '/post/{pid}/'
                302Failure:
                  description: 'Failed edit of the post. Redirect to the same page.'
                  value: '/post/{pid}/'

  /api/posts:
    get:
      operationId: R307
      summary: 'R307: List posts'
      description: 'Show list posts. Access: PUB'
      tags:
        - 'M03: Posts'
      parameters:
        - in: query
          name: query
          description: 'String to use for full-text search'
          schema:
            type: string
          required: false
        - in: query
          name: author
          description: 'Only posts that were submitted by the given user will be shown'
          schema:
            type: integer
          required: false
        - in: query
          name: community
          description: 'Only posts that were submitted to the given community will be shown'
          schema:
            type: integer
          required: false 
      
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    post_date:
                      type: string
                    community:
                      type: string
                    tag:
                      type: string
                    likes:
                      type: string
                    dislikes:
                      type: string
                    author:
                      type: string
                    title:
                      type: string
                    text:
                      type: string
                    image:
                      type: string
                      format: byte
                    is_edited:
                      type: string

                example:
                  - id: 10
                    post_date: 2022-11-11
                    community: lbawmemes
                    tag: relatable
                    likes: 16
                    dislikes: 3
                    author: VeryRealUser8261
                    title: An interesting title
                    text: 
                    image: 36
                    is_edited: false
                  - id: 10
                    post_date: 2022-10-20
                    community: lbawmemes
                    tag: sad
                    likes: 60
                    dislikes: 7
                    author: OriginalName142
                    title: An uninteresting title
                    text:
                    image: 72
                    is_edited: true

  /feed:
    get:
      operationId: R308
      summary: 'R308: View feed'
      description: 'Provides the feed view. Access: PUB'
      tags:
        - 'M03: Posts'

      responses:
        '200':
          description: 'Ok. Show feed UI.'

#M04 - User administration and Static Pages
  #delete user

  /users/{id}:
    delete:
      operationId: R402
      summary: 'R402: Delete user'
      description: 'Deletes a user from the platform, making all of their data anonymous. Access: ADM'
      tags:
        - 'M04: User Administration and Static pages'

      parameters:
        - in: path 
          name: id 
          schema:
            type: integer
          required: true 

      responses:
        '200':
          description: 'Ok. User deleted.'

  /users/{id}/block:
    post:
      operationId: R403
      summary: 'R403: Platform block user'
      description: 'Blocks a user from the platform, preventing them from further submitting content. Access: ADM'
      tags:
        - 'M04: User Administration and Static pages'
      
      parameters:
        - in: path 
          name: id 
          schema:
            type: integer
          required: true
      
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                user:
                  type: integer
                reason: 
                  type: string
                start_date:
                  type: string
                end_date:
                  type: string
                required:
                  - user
                  - reason
                  - start_date


      responses:
        '200':
          description: 'Ok. Platform Block created.'
        '403':
          description: 'Error. Insufficient permissions'
        '404':
          description: 'Error. User not found'
